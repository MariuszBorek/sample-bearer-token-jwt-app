spring.application.name=securitygrad

# -------------------------------------------------------
# H2 Database
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

# -------------------------------------------------------
# Ustawienia certyfikatu SSL i HTTPS
# do stworzenia certyfikatu SSL można użyć polecenia(keytool narzedzie dostane z JDK):
# keytool -genkeypair -alias mycert -keyalg RSA -keysize 2048 -storetype PKCS12 -keystore keystore.p12 -validity 3650
# musisz zaakceptować ten certyfikat w przegladarce zeby zadziałało w tym celu(w firefox) idz do:
# inspect -> network -> w kolumnie 'Transfered' kliknij na  'Cors Failed' -> Advanced -> i zakceptuj ryzyko
# Mozesz tez zaimportować certyfikat do przeglądarki:
# Settings -> Privacy & Security -> Certificates -> View Certificates -> your Certificates -> Import

# Port HTTPS
server.port=8443
# Ścieżka do pliku keystore
server.ssl.key-store=classpath:keystore.p12
# Hasło do keystore
server.ssl.key-store-password=password
# Typ keystore
server.ssl.key-store-type=PKCS12
# Alias certyfikatu
server.ssl.key-alias=mycert

# -------------------------------------------------------
# Ustawienia Spring Security - ochrona aplikacji
# SameSite dla ochrony przed CSRF
server.servlet.session.cookie.same-site=strict

# Nagłówek X-Frame-Options (Clickjacking protection)
spring.security.headers.frame=false

# Wymuszanie HTTPS w ciasteczkach
server.servlet.session.cookie.secure=true

# HSTS (jeśli używasz HTTPS)
server.ssl.enabled=true
server.forward-headers-strategy=native